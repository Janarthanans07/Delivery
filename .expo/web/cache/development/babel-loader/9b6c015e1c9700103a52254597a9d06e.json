{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Janarthanan\\\\Documents\\\\react\\\\final\\\\Screen\\\\RegisterScreen.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Loader from \"./Components/loader\";\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userPassword = _useState6[0],\n      setUserPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userAge = _useState8[0],\n      setUserAge = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userAddress = _useState10[0],\n      setUserAddress = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errortext = _useState14[0],\n      setErrortext = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isRegistraionSuccess = _useState16[0],\n      setIsRegistraionSuccess = _useState16[1];\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Please fill Name');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Please fill Email');\n      return;\n    }\n\n    if (!userAge) {\n      alert('Please fill Age');\n      return;\n    }\n\n    if (!userAddress) {\n      alert('Please fill Address');\n      return;\n    }\n\n    setLoading(true);\n    var dataToSend = {\n      user_name: userName,\n      user_email: userEmail,\n      user_age: userAge,\n      user_address: userAddress\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    fetch('https://aboutreact.herokuapp.com/register.php', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      console.log(responseJson);\n\n      if (responseJson.status == 1) {\n        setIsRegistraionSuccess(true);\n        console.log('Registration Successful. Please Login to proceed');\n      } else {\n        setErrortext('Registration Unsuccessful');\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: require(\"../Image/success.png\"),\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Registration Successful.\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Login Now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#307ecc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Image/grocery.jpg\"),\n    style: {\n      width: '50%',\n      height: 100,\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    underlineColorAndroid: \"#FFFFFF\",\n    placeholder: \"User Name\",\n    placeholderTextColor: \"#F6F6F7\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return _this._emailinput && _this._emailinput.focus();\n    },\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    underlineColorAndroid: \"#F6F6F7\",\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#F6F6F7\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return _this._ageinput && _this._ageinput.focus();\n    },\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    underlineColorAndroid: \"#F6F6F7\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#F6F6F7\",\n    keyboardType: \"default\",\n    secureTextEntry: true,\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    underlineColorAndroid: \"#FFFFFF\",\n    placeholder: \"Confirm Password\",\n    placeholderTextColor: \"#F6F6F7\",\n    autoCapitalize: \"\",\n    returnKeyType: \"next\",\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \" \", errortext, \" \") : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"REGISTER\")))));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: 'white'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Janarthanan/Documents/react/final/Screen/RegisterScreen.js"],"names":["React","useState","Loader","RegisterScreen","props","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","userAge","setUserAge","userAddress","setUserAddress","loading","setLoading","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","handleSubmitButton","alert","dataToSend","user_name","user_email","user_age","user_address","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","then","response","json","responseJson","console","log","status","catch","error","flex","backgroundColor","justifyContent","require","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","alignItems","width","margin","SectionStyle","inputStyle","UserName","_emailinput","focus","UserEmail","_ageinput","UserPassword","Keyboard","dismiss","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;AAEA,OAAOC,MAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,kBACAH,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACzBI,QADyB;AAAA,MACfC,WADe;;AAAA,mBAEEL,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEzBM,SAFyB;AAAA,MAEdC,YAFc;;AAAA,mBAGQP,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,MAGzBQ,YAHyB;AAAA,MAGXC,eAHW;;AAAA,mBAIFT,QAAQ,CAAC,EAAD,CAJN;AAAA;AAAA,MAIzBU,OAJyB;AAAA,MAIhBC,UAJgB;;AAAA,mBAKMX,QAAQ,CAAC,EAAD,CALd;AAAA;AAAA,MAKzBY,WALyB;AAAA,MAKZC,cALY;;AAAA,oBAMFb,QAAQ,CAAC,KAAD,CANN;AAAA;AAAA,MAMzBc,OANyB;AAAA,MAMhBC,UANgB;;AAAA,oBAOEf,QAAQ,CAAC,EAAD,CAPV;AAAA;AAAA,MAOzBgB,SAPyB;AAAA,MAOdC,YAPc;;AAAA,oBAQwBjB,QAAQ,CAAC,KAAD,CARhC;AAAA;AAAA,MAQzBkB,oBARyB;AAAA,MAQHC,uBARG;;AAU9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BH,IAAAA,YAAY,CAAC,EAAD,CAAZ;;AACA,QAAI,CAACb,QAAL,EAAe;AACbiB,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AACD;;AACD,QAAI,CAACf,SAAL,EAAgB;AACde,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACA;AACD;;AACD,QAAI,CAACX,OAAL,EAAc;AACZW,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACA;AACD;;AACD,QAAI,CAACT,WAAL,EAAkB;AAChBS,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACD;;AAEDN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIO,UAAU,GAAG;AACfC,MAAAA,SAAS,EAAEnB,QADI;AAEfoB,MAAAA,UAAU,EAAElB,SAFG;AAGfmB,MAAAA,QAAQ,EAAEf,OAHK;AAIfgB,MAAAA,YAAY,EAAEd;AAJC,KAAjB;AAMA,QAAIe,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,GAAT,IAAgBN,UAAhB,EAA4B;AAC1B,UAAIO,UAAU,GAAGC,kBAAkB,CAACF,GAAD,CAAnC;AACA,UAAIG,YAAY,GAAGD,kBAAkB,CAACR,UAAU,CAACM,GAAD,CAAX,CAArC;AACAD,MAAAA,QAAQ,CAACK,IAAT,CAAcH,UAAU,GAAG,GAAb,GAAmBE,YAAjC;AACD;;AACDJ,IAAAA,QAAQ,GAAGA,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAX;AAEAC,IAAAA,KAAK,CAAC,+CAAD,EAAkD;AACrDC,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,IAAI,EAAET,QAF+C;AAGrDU,MAAAA,OAAO,EAAE;AAEP,wBAAgB;AAFT;AAH4C,KAAlD,CAAL,CAQGC,IARH,CAQQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KARhB,EASGF,IATH,CASQ,UAAAG,YAAY,EAAI;AAEpB1B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAEA,UAAIA,YAAY,CAACG,MAAb,IAAuB,CAA3B,EAA8B;AAC5BzB,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACD,OAHD,MAGO;AACL1B,QAAAA,YAAY,CAAC,2BAAD,CAAZ;AACD;AACF,KApBH,EAqBG4B,KArBH,CAqBS,UAAAC,KAAK,EAAI;AAEd/B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA2B,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,KAzBH;AA0BD,GA5DD;;AA6DA,MAAI5B,oBAAJ,EAA0B;AACxB,WACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACL6B,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,eAAe,EAAE,SAFZ;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD;AACE,MAAA,MAAM,EAAEC,OAAO,wBADjB;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,UAAU,EAAE,SAA3B;AAAsCC,QAAAA,SAAS,EAAE;AAAjD,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAVF,EAWE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,WADhB;AAEE,MAAA,aAAa,EAAE,GAFjB;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMrD,KAAK,CAACsD,UAAN,CAAiBC,QAAjB,CAA0B,aAA1B,CAAN;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAXF,CADF;AAoBD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEZ,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,eAAe,EAAE;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,UAAD;AAAY,IAAA,yBAAyB,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEY,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEV,OAAO,wBADjB;AAEE,IAAA,KAAK,EAAE;AACLW,MAAAA,KAAK,EAAE,KADF;AAELV,MAAAA,MAAM,EAAE,GAFH;AAGLC,MAAAA,UAAU,EAAE,SAHP;AAILU,MAAAA,MAAM,EAAE;AAJH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAYE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACU,UADhB;AAEE,IAAA,YAAY,EAAE,sBAAAC,QAAQ;AAAA,aAAI5D,WAAW,CAAC4D,QAAD,CAAf;AAAA,KAFxB;AAGE,IAAA,qBAAqB,EAAC,SAHxB;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,oBAAoB,EAAC,SALvB;AAME,IAAA,cAAc,EAAC,WANjB;AAOE,IAAA,aAAa,EAAC,MAPhB;AAQE,IAAA,eAAe,EAAE;AAAA,aACf,KAAI,CAACC,WAAL,IAAoB,KAAI,CAACA,WAAL,CAAiBC,KAAjB,EADL;AAAA,KARnB;AAWE,IAAA,YAAY,EAAE,KAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACS,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACU,UADhB;AAEE,IAAA,YAAY,EAAE,sBAAAI,SAAS;AAAA,aAAI7D,YAAY,CAAC6D,SAAD,CAAhB;AAAA,KAFzB;AAGE,IAAA,qBAAqB,EAAC,SAHxB;AAIE,IAAA,WAAW,EAAC,aAJd;AAKE,IAAA,oBAAoB,EAAC,SALvB;AAME,IAAA,YAAY,EAAC,eANf;AAUE,IAAA,aAAa,EAAC,MAVhB;AAWE,IAAA,eAAe,EAAE;AAAA,aAAM,KAAI,CAACC,SAAL,IAAkB,KAAI,CAACA,SAAL,CAAeF,KAAf,EAAxB;AAAA,KAXnB;AAYE,IAAA,YAAY,EAAE,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,EAgCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACS,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACU,UADhB;AAEE,IAAA,YAAY,EAAE,sBAAAM,YAAY;AAAA,aAAI7D,eAAe,CAAC6D,YAAD,CAAnB;AAAA,KAF5B;AAGE,IAAA,qBAAqB,EAAC,SAHxB;AAIE,IAAA,WAAW,EAAC,UAJd;AAKE,IAAA,oBAAoB,EAAC,SALvB;AAME,IAAA,YAAY,EAAC,SANf;AAOE,IAAA,eAAe,EAAE,IAPnB;AAWE,IAAA,eAAe,EAAEC,QAAQ,CAACC,OAX5B;AAYE,IAAA,YAAY,EAAE,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhCF,EAgDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACS,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACU,UADhB;AAEE,IAAA,YAAY,EAAE,sBAAAM,YAAY;AAAA,aAAI7D,eAAe,CAAC6D,YAAD,CAAnB;AAAA,KAF5B;AAGE,IAAA,qBAAqB,EAAC,SAHxB;AAIE,IAAA,WAAW,EAAC,kBAJd;AAKE,IAAA,oBAAoB,EAAC,SALvB;AAME,IAAA,cAAc,EAAC,EANjB;AAUE,IAAA,aAAa,EAAC,MAVhB;AAWE,IAAA,eAAe,EAAEC,QAAQ,CAACC,OAX5B;AAYE,IAAA,YAAY,EAAE,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhDF,EAgEGxD,SAAS,IAAI,EAAb,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsC,MAAM,CAACmB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsCzD,SAAtC,MADD,GAEG,IAlEN,EAmEE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEsC,MAAM,CAACE,WADhB;AAEE,IAAA,aAAa,EAAE,GAFjB;AAGE,IAAA,OAAO,EAAEpC,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkC,MAAM,CAACK,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAnEF,CAZF,CAFF,CADF;AA4FD,CAzLD;;AA0LA,eAAezD,cAAf;AAEA,IAAMoD,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,YAAY,EAAE;AACZa,IAAAA,aAAa,EAAE,KADH;AAEZzB,IAAAA,MAAM,EAAE,EAFI;AAGZ0B,IAAAA,SAAS,EAAE,EAHC;AAIZC,IAAAA,UAAU,EAAE,EAJA;AAKZC,IAAAA,WAAW,EAAE,EALD;AAMZjB,IAAAA,MAAM,EAAE;AANI,GADiB;AAS/BN,EAAAA,WAAW,EAAE;AACXR,IAAAA,eAAe,EAAE,SADN;AAEXgC,IAAAA,WAAW,EAAE,CAFF;AAGXC,IAAAA,KAAK,EAAE,SAHI;AAIXC,IAAAA,WAAW,EAAE,SAJF;AAKX/B,IAAAA,MAAM,EAAE,EALG;AAMXS,IAAAA,UAAU,EAAE,QAND;AAOXuB,IAAAA,YAAY,EAAE,EAPH;AAQXL,IAAAA,UAAU,EAAE,EARD;AASXC,IAAAA,WAAW,EAAE,EATF;AAUXF,IAAAA,SAAS,EAAE,EAVA;AAWXO,IAAAA,YAAY,EAAE;AAXH,GATkB;AAsB/BzB,EAAAA,eAAe,EAAE;AACfsB,IAAAA,KAAK,EAAE,SADQ;AAEfI,IAAAA,eAAe,EAAE,EAFF;AAGfC,IAAAA,QAAQ,EAAE;AAHK,GAtBc;AA2B/BtB,EAAAA,UAAU,EAAE;AACVjB,IAAAA,IAAI,EAAE,CADI;AAEVkC,IAAAA,KAAK,EAAE,OAFG;AAGVM,IAAAA,WAAW,EAAE,EAHH;AAIVC,IAAAA,YAAY,EAAE,EAJJ;AAKVR,IAAAA,WAAW,EAAE,CALH;AAMVG,IAAAA,YAAY,EAAE,EANJ;AAOVD,IAAAA,WAAW,EAAE;AAPH,GA3BmB;AAoC/BT,EAAAA,cAAc,EAAE;AACdQ,IAAAA,KAAK,EAAE,KADO;AAEdQ,IAAAA,SAAS,EAAE,QAFG;AAGdH,IAAAA,QAAQ,EAAE;AAHI,GApCe;AAyC/B/B,EAAAA,gBAAgB,EAAE;AAChB0B,IAAAA,KAAK,EAAE,OADS;AAEhBQ,IAAAA,SAAS,EAAE,QAFK;AAGhBH,IAAAA,QAAQ,EAAE,EAHM;AAIhBI,IAAAA,OAAO,EAAE;AAJO;AAzCa,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {  StyleSheet,  TextInput,  View,  Text,  Image,  KeyboardAvoidingView,  Keyboard,  TouchableOpacity,  ScrollView,} from 'react-native';\r\nimport Loader from './Components/loader';\r\n\r\nconst RegisterScreen = props => {\r\n  let [userName, setUserName] = useState('');\r\n  let [userEmail, setUserEmail] = useState('');\r\n  let [userPassword, setUserPassword] = useState('');\r\n  let [userAge, setUserAge] = useState('');\r\n  let [userAddress, setUserAddress] = useState('');\r\n  let [loading, setLoading] = useState(false);\r\n  let [errortext, setErrortext] = useState('');\r\n  let [isRegistraionSuccess, setIsRegistraionSuccess] = useState(false);\r\n\r\n  const handleSubmitButton = () => {\r\n    setErrortext('');\r\n    if (!userName) {\r\n      alert('Please fill Name');\r\n      return;\r\n    }\r\n    if (!userEmail) {\r\n      alert('Please fill Email');\r\n      return;\r\n    }\r\n    if (!userAge) {\r\n      alert('Please fill Age');\r\n      return;\r\n    }\r\n    if (!userAddress) {\r\n      alert('Please fill Address');\r\n      return;\r\n    }\r\n    //Show Loader\r\n    setLoading(true);\r\n    var dataToSend = {\r\n      user_name: userName,\r\n      user_email: userEmail,\r\n      user_age: userAge,\r\n      user_address: userAddress,\r\n    };\r\n    var formBody = [];\r\n    for (var key in dataToSend) {\r\n      var encodedKey = encodeURIComponent(key);\r\n      var encodedValue = encodeURIComponent(dataToSend[key]);\r\n      formBody.push(encodedKey + '=' + encodedValue);\r\n    }\r\n    formBody = formBody.join('&');\r\n\r\n    fetch('https://aboutreact.herokuapp.com/register.php', {\r\n      method: 'POST',\r\n      body: formBody,\r\n      headers: {\r\n        //Header Defination\r\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        //Hide Loader\r\n        setLoading(false);\r\n        console.log(responseJson);\r\n        // If server response message same as Data Matched\r\n        if (responseJson.status == 1) {\r\n          setIsRegistraionSuccess(true);\r\n          console.log('Registration Successful. Please Login to proceed');\r\n        } else {\r\n          setErrortext('Registration Unsuccessful');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        //Hide Loader\r\n        setLoading(false);\r\n        console.error(error);\r\n      });\r\n  };\r\n  if (isRegistraionSuccess) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: '#307ecc',\r\n          justifyContent: 'center',\r\n        }}>\r\n        <Image\r\n          source={require('../Image/success.png')}\r\n          style={{ height: 150, resizeMode: 'contain', alignSelf: 'center' }}\r\n        />\r\n        <Text style={styles.successTextStyle}>Registration Successful.</Text>\r\n        <TouchableOpacity\r\n          style={styles.buttonStyle}\r\n          activeOpacity={0.5}\r\n          onPress={() => props.navigation.navigate('LoginScreen')}>\r\n          <Text style={styles.buttonTextStyle}>Login Now</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: '#307ecc' }}>\r\n      {/* <Loader loading={loading} /> */}\r\n      <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n        <View style={{ alignItems: 'center' }}>\r\n          <Image\r\n            source={require('../Image/grocery.jpg')}\r\n            style={{\r\n              width: '50%',\r\n              height: 100,\r\n              resizeMode: 'contain',\r\n              margin: 30,\r\n            }}\r\n          />\r\n        </View>\r\n        <KeyboardAvoidingView enabled>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={UserName => setUserName(UserName)}\r\n              underlineColorAndroid=\"#FFFFFF\"\r\n              placeholder=\"User Name\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              autoCapitalize=\"sentences\"\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                this._emailinput && this._emailinput.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={UserEmail => setUserEmail(UserEmail)}\r\n              underlineColorAndroid=\"#F6F6F7\"\r\n              placeholder=\"Enter Email\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              keyboardType=\"email-address\"\r\n            //   ref={ref => {\r\n            //     this._emailinput = ref;\r\n            //   }}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() => this._ageinput && this._ageinput.focus()}\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={UserPassword => setUserPassword(UserPassword)}\r\n              underlineColorAndroid=\"#F6F6F7\"\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              keyboardType=\"default\"\r\n              secureTextEntry={true}\r\n            //   ref={ref => {\r\n            //     this._ageinput = ref;\r\n            //   }}\r\n              onSubmitEditing={Keyboard.dismiss}\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={UserPassword => setUserPassword(UserPassword)}\r\n              underlineColorAndroid=\"#FFFFFF\"\r\n              placeholder=\"Confirm Password\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              autoCapitalize=\"\"\r\n            //   ref={ref => {\r\n            //     this._addressinput = ref;\r\n            //   }}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={Keyboard.dismiss}\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          {errortext != '' ? (\r\n            <Text style={styles.errorTextStyle}> {errortext} </Text>\r\n          ) : null}\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            activeOpacity={0.5}\r\n            onPress={handleSubmitButton}>\r\n            <Text style={styles.buttonTextStyle}>REGISTER</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  SectionStyle: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#7DE24E',\r\n    borderWidth: 0,\r\n    color: '#FFFFFF',\r\n    borderColor: '#7DE24E',\r\n    height: 40,\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonTextStyle: {\r\n    color: '#FFFFFF',\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n  },\r\n  inputStyle: {\r\n    flex: 1,\r\n    color: 'white',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    borderColor: 'white',\r\n  },\r\n  errorTextStyle: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n  },\r\n  successTextStyle: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    padding: 30,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}